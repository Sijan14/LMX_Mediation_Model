model_1 <- lm(mean_as ~ mean_lc, data = df)
summary(model)
summary(model_1)
model_2 <- lm(mean_as ~ mean_lc + mean_lmx, data = df)
summary(model_2)
model_3 <- lm(mean_as ~ mean_lc + mean_lmx * gender_match, data = df)
summary(model_3)
## Multiple Group Path Model
## recoding moderator variable to be categorical
df %>%
mutate(gen_mat4 <- case_when(gender == 3 & gender_l == 1) ~ "MM",
case_when(gender == 4 & gender_l == 2) ~ "FF")
## Multiple Group Path Model
## recoding moderator variable to be categorical
df %>%
mutate(gen_mat4 = case_when(gender == 3 & gender_l == 1) ~ "MM",
case_when(gender == 4 & gender_l == 2) ~ "FF")
## Multiple Group Path Model
## recoding moderator variable to be categorical
df %>%
mutate(gen_mat4 = case_when(gender == 3 & gender_l == 1) ~ "MM",
case_when(gender == 4 & gender_l == 2) ~ "FF",
case_when(gender == 3 & gender_l == 2) ~ "MF",
case_when(gender == 4 & gender_l == 1) ~ "FM")
## Multiple Group Path Model
## recoding moderator variable to be categorical
df %>%
mutate(gen_mat4 = case_when(
gender == 3 & gender_l == 1) ~ "MM",
gender == 4 & gender_l == 2) ~ "FF",
## Multiple Group Path Model
## recoding moderator variable to be categorical
df %>%
mutate(gen_mat4 = case_when(
gender == 3 & gender_l == 1 ~ "MM",
gender == 4 & gender_l == 2 ~ "FF",
gender == 3 & gender_l == 2 ~ "MF",
gender == 4 & gender_l == 1 ~ "FM"
))
## Multiple Group Path Model
## recoding moderator variable to be categorical
df <- df %>%
mutate(gen_mat4 = case_when(
gender == 3 & gender_l == 1 ~ "MM",
gender == 4 & gender_l == 2 ~ "FF",
gender == 3 & gender_l == 2 ~ "MF",
gender == 4 & gender_l == 1 ~ "FM"
))
class(df$gen_mat4)
df$gen_mat4 <- as.factor(df$gen_mat4)
class(df$gen_mat4)
MGmodel1 <- '
# Define the model
mean_lmx ~ a1*mean_lc  # Path from IV to Mediator
mean_as ~ b1*mean_lc  # Direct path from IV to DV
mean_as ~ c1*mean_lmx  # Path from Mediator to DV
# Define the indirect effect (a1 * b1)
indirect_effect := a1 * b1
# Define the total effect (c1 + (a1 * b1))
total_effect := c1 + (a1 * b1)
# Define moderation effects
mean_as ~ c2*gen_mat4  # Moderation effect on the path from Mediator to DV
mean_lmx ~ a2*gen_mat4  # Moderation effect on the path from IV to Mediator
# Define the interaction effect between Mediator and Moderator
interaction_effect := a2 * mean_lmx
'
fitMG <- sem(MGmodel1, data = df, group = "gen_mat4")
summary(fitMG)
fitMG <- sem(MGmodel1, data = df, group = "gen_mat4")
summary(fitMG)
print(summary(fitMG))
MGmodel1 <- '
# Define the model
mean_lmx ~ a1*mean_lc  # Path from IV to Mediator
mean_as ~ b1*mean_lc  # Direct path from IV to DV
mean_as ~ c1*mean_lmx  # Path from Mediator to DV
# Define the indirect effect (a1 * b1)
indirect_effect := a1 * b1
# Define the total effect (c1 + (a1 * b1))
total_effect := c1 + (a1 * b1)
# Define moderation effects
mean_as ~ c2*gender_match  # Moderation effect on the path from Mediator to DV
mean_lmx ~ a2*gender_match  # Moderation effect on the path from IV to Mediator
# Define the interaction effect between Mediator and Moderator
interaction_effect := a2 * mean_lmx
'
fitMG <- sem(MGmodel1, data = df, group = "gender_match")
summary(fitMG)
MGmodel1 <- '
# Define the model
mean_lmx ~ a1*mean_lc  # Path from IV to Mediator
mean_as ~ b1*mean_lc  # Direct path from IV to DV
mean_as ~ c1*mean_lmx  # Path from Mediator to DV
# Define the indirect effect (a1 * b1)
indirect_effect := a1 * b1
# Define the total effect (c1 + (a1 * b1))
total_effect := c1 + (a1 * b1)
# Define moderation effects
mean_as ~ c2*gender_match  # Moderation effect on the path from Mediator to DV
mean_lmx ~ a2*gender_match  # Moderation effect on the path from IV to Mediator
'
fitMG <- sem(MGmodel1, data = df, group = "gender_match")
sum(is.na(df$gender_match)
sum(is.na(df$gender_match)
sum(is.na(df$gender_match))
MGmodel1 <- '
# Define the model
mean_lmx ~ a1*mean_lc  # Path from IV to Mediator
mean_as ~ b1*mean_lc  # Direct path from IV to DV
mean_as ~ c1*mean_lmx  # Path from Mediator to DV
# Define the indirect effect (a1 * b1)
indirect_effect := a1 * b1
# Define the total effect (c1 + (a1 * b1))
total_effect := c1 + (a1 * b1)
# Define moderation effects
mean_lmx ~ a2*gender_match  # Moderation effect on the path from IV to Mediator
'
fitMG <- sem(MGmodel1, data = df, group = "gender_match")
summary(fitMG)
df$gender_match <- as.factor(df$gender_match)
fitMG <- sem(MGmodel1, data = df, group = "gender_match")
MGmodel1 <- '
# Define the model
mean_lmx ~ a1*mean_lc  # Path from IV to Mediator
mean_as ~ b1*mean_lc  # Direct path from IV to DV
mean_as ~ c1*mean_lmx  # Path from Mediator to DV
# Define the indirect effect (a1 * b1)
indirect_effect := a1 * b1
# Define the total effect (c1 + (a1 * b1))
total_effect := c1 + (a1 * b1)
# Define moderation effects
mean_lmx ~ a2*gender_match  # Moderation effect on the path from IV to Mediator
'
fitMG <- sem(MGmodel1, data = df, group = "gender_match")
class(df$gender_match)
MGmodel1 <- '
# Direct effects
mean_lmx ~ mean_lc  # Path from IV to Mediator
mean_as ~ mean_lc + mean_lmx
'
fitMG <- sem(MGmodel1, data = df, group = "gender_match")
summary(fitMG)
MGmodel1 <- '
# Direct effects
mean_lmx ~ a*mean_lc  # Path from IV to Mediator
mean_as ~ mean_lc + b*mean_lmx
# indirect effects
indirect := a*b
'
fitMG <- sem(MGmodel1, data = df, group = "gender_match")
summary(fitMG)
fitMG <- sem(MGmodel1, data = df)
summary(fitMG)
MGmodel1 <- '
# Direct effects
mean_lmx ~ a*mean_lc  # Path from IV to Mediator
mean_as ~ mean_lc + b*mean_lmx
mean_as ~ mean_lc + mean_lmx * gen_mat4
# indirect effects
indirect := a*b
'
fitMG <- sem(MGmodel1, data = df)
MGmodel1 <- '
# Direct effects
mean_lmx ~ a*mean_lc  # Path from IV to Mediator
mean_as ~ mean_lc + b*mean_lmx * gen_mat4 # Path from IV to DV
# indirect effects
indirect := a*b
'
fitMG <- sem(MGmodel1, data = df)
MGmodel1 <- '
# Direct effects
mean_lmx ~ a*mean_lc  # Path from IV to Mediator
mean_as ~ mean_lc + b*mean_lmx + mean_lmx* gen_mat4 # Path from IV to DV
# indirect effects
indirect := a*b
# exogenous covariances
'
fitMG <- sem(MGmodel1, data = df)
MGmodel1 <- '
# Direct effects
mean_lmx ~ a*mean_lc  # Path from IV to Mediator
mean_as ~ mean_lc + b*mean_lmx + mean_lmx * gen_mat4
# indirect effects
indirect := a*b
# exogenous covariances
mean_lmx ~~ gen_mat4
'
fitMG <- sem(MGmodel1, data = df)
MGmodel1 <- '
# Direct effects
mean_lmx ~ a*mean_lc  # Path from IV to Mediator
mean_as ~ mean_lc + b*mean_lmx * gen_mat4
# indirect effects
indirect := a*b
# exogenous covariances
mean_lmx ~~ gen_mat4
'
fitMG <- sem(MGmodel1, data = df)
summary(fitMG)
MGmodel1 <- '
# Direct effects
mean_lmx ~ a*mean_lc  # Path from IV to Mediator
mean_as ~ mean_lc + b*mean_lmx * c*gen_mat4
# indirect effects
indirect := a*b
# exogenous covariances
mean_lmx ~~ gen_mat4
'
fitMG <- sem(MGmodel1, data = df)
summary(fitMG)
fitMG <- sem(MGmodel1, data = df, group = "gen_mat4")
summary(fitMG)
MGmodel1 <- '
# Direct effects
mean_lmx ~ a*mean_lc  # Path from IV to Mediator
mean_as ~ mean_lc + b*mean_lmx * gender_match
# indirect effects
indirect := a*b
# exogenous covariances
mean_lmx ~~ gender_match
'
fitMG <- sem(MGmodel1, data = df, group = "gen_mat4")
summary(fitMG)
MGmodel1 <- '
# Direct effects
mean_lmx ~ a*mean_lc  # Path from IV to Mediator
mean_as ~ mean_lc + b*mean_lmx * gender_match
# indirect effects
indirect := a*b
# exogenous covariances
mean_lmx ~~ gender_match
'
fitMG <- sem(MGmodel1, data = df, group = "gender_match")
summary(fitMG)
df$gender_match <- as.numeric(df$gender_match)
fitMG <- sem(MGmodel1, data = df, group = "gender_match")
summary(fitMG)
df$gen_mat4 <- factor(df$gen_mat4, ordered = TRUE, levels = c("MM", "FF", "MF", "FM"))
MGmodel1 <- '
# Direct effects
mean_lmx ~ a*mean_lc  # Path from IV to Mediator
mean_as ~ mean_lc + b*mean_lmx * gen_mat4
# indirect effects
indirect := a*b
# exogenous covariances
mean_lmx ~~ gen_mat4
'
fitMG <- sem(MGmodel1, data = df, group = "gen_mat4")
summary(fitMG)
MGmodel1 <- '
# Direct effects
mean_lmx ~ a*mean_lc  # Path from IV to Mediator
mean_as ~ mean_lc + b*mean_lmx
# indirect effects
indirect := a*b
'
fitMG <- sem(MGmodel1, data = df, group = "gen_mat4")
summary(fitMG)
MGmodel1 <- '
# Direct effects
mean_lmx ~ a*mean_lc
mean_as ~ b*mean_lmx
mean_as ~ c*mean_lc + mean_lmx
# indirect effects
indirect := a*b
'
fitMG <- sem(MGmodel1, data = df, group = "gen_mat4")
MGmodel1 <- '
# Direct effects
mean_lmx ~ a*mean_lc
mean_as ~ b*mean_lmx
mean_as ~ mean_lc + mean_lmx
# indirect effects
indirect := a*b
'
fitMG <- sem(MGmodel1, data = df, group = "gen_mat4")
summary(fitMG)
MGmodel1 <- '
# Direct effects
mean_lmx ~ a*mean_lc
mean_as ~ b*mean_lmx
# indirect effects
indirect := a*b
'
fitMG <- sem(MGmodel1, data = df, group = "gen_mat4")
summary(fitMG)
MGmodel1 <- '
# Direct effects
mean_lmx ~ a*mean_lc
mean_as ~ mean_lc + b*mean_lmx
# indirect effects
indirect := a*b
'
fitMG <- sem(MGmodel1, data = df, group = "gen_mat4")
summary(fitMG)
MGmodel1 <- '
# Direct effects
mean_lmx ~ a*mean_lc
mean_as ~ mean_lc + b*mean_lmx
# indirect effects
indirect := a*b
'
fitMG1 <- sem(MGmodel1, data = df, group = "gen_mat4")
summary(fitMG1)
MGmodel2 <- '
# Direct effects
mean_lmx ~ a*mean_lc
mean_as ~ mean_lc + b*mean_lmx
# indirect effects
indirect := a*b
# moderation effects
mean_as ~ c*gen_mat4 * mean_lmx
'
fitMG2 <- sem(MGmodel2, data = df, group = "gen_mat4")
summary(fitMG2)
MGmodel2 <- '
# Direct effects
mean_lmx ~ a*mean_lc
mean_as ~ mean_lc + b*mean_lmx
# indirect effects as mediated by mean_lmx
indirect := a*b
# moderation effects
mean_as ~ c*gen_mat4*mean_lmx
'
fitMG2 <- sem(MGmodel2, data = df, group = "gen_mat4")
MGmodel2 <- '
# Direct effects
mean_lmx ~ a*mean_lc
mean_as ~ mean_lc + b*mean_lmx
# indirect effects as mediated by mean_lmx
indirect := a*b
# moderation effects
moderation_int := gen_mat4*mean_lmx
'
fitMG2 <- sem(MGmodel2, data = df, group = "gen_mat4")
summary(fitMG2)
summary(fitMG1)
summary(fitMG1)
fitMG2 <- sem(MGmodel1, data = df, group = "gen_mat4")
summary(fitMG2)
lavTestLRT(fitMG1, fitMG2)
fitMG1 <- sem(MGmodel1, data = df, group = "gen_mat4")
summary(fitMG1)
summary(model_1, standardized = TRUE, rsq = TRUE)
summary(fitMG1,  standardized = TRUE, rsq = TRUE)
install.packages("tidyverse")
install.packages("psych")
install.packages("ggplot2")
install.packages("lavaan")
library(tidyverse)
library(psych)
library(ggplot2)
library(lavaan)
df <- read_csv("GenderMatchData.csv")
df <- df[ , c("tmkey", "tlkey", "gender", "age", "gender_l", "age_l",
"lc1", "lc2", "lc3", "lc4", "lc5", "lc6", "lc7", "lc8",
"lmx1", "lmx2", "lmx3", "lmx4", "lmx5", "lmx6", "lmx7",
"as1", "as2", "as3", "as4", "as5", "as6", "as7")]
df <- df %>%
mutate(mean_lc = (lc1 + lc2 + lc3 + lc4 + lc5 + lc6 + lc7 + lc8) / 8,
mean_lmx = (lmx1 + lmx2 + lmx3 + lmx4 + lmx5 + lmx6 + lmx7) / 7,
mean_as = (as1 + as2 + as3 + as4 + as5 + as6 + as7) / 7)
sum(is.na(df$mean_lmx))
sum(is.na(df$mean_as))
sum(is.na(df$mean_lc))
df <- df %>%
filter(mean_lc != "NA") %>%
filter(mean_lmx != "NA") %>%
filter(mean_as != "NA")
df <- df %>%
mutate(gender_match = case_when((gender == 3 & gender_l == 1) |
(gender == 4 & gender_l == 2) ~ 1, TRUE ~ 0))
model_1 <- lm(mean_as ~ mean_lc, data = df)
summary(model_1)
model_2 <- lm(mean_as ~ mean_lc + mean_lmx, data = df)
summary(model_2)
model_3 <- lm(mean_as ~ mean_lc + mean_lmx * gender_match, data = df)
summary(model_3)
df <- df %>%
mutate(gen_mat4 = case_when(
gender == 3 & gender_l == 1 ~ "MM",
gender == 4 & gender_l == 2 ~ "FF",
gender == 3 & gender_l == 2 ~ "MF",
gender == 4 & gender_l == 1 ~ "FM"
))
df$gender_match <- as.numeric(df$gender_match)
df$gen_mat4 <- factor(df$gen_mat4, ordered = TRUE, levels = c("MM", "FF", "MF", "FM"))
MGmodel1 <- '
# Direct effects
mean_lmx ~ a*mean_lc
mean_as ~ mean_lc + b*mean_lmx
# indirect effects
indirect := a*b
'
fitMG1 <- sem(MGmodel1, data = df, group = "gen_mat4")
summary(fitMG1,  standardized = TRUE, rsq = TRUE)
install.packages("psych")
install.packages("ggplot2")
install.packages("lavaan")
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("lavaan")
df <- read_csv("GenderMatchData.csv")
df <- df[ , c("tmkey", "tlkey", "gender", "age", "gender_l", "age_l",
"lc1", "lc2", "lc3", "lc4", "lc5", "lc6", "lc7", "lc8",
"lmx1", "lmx2", "lmx3", "lmx4", "lmx5", "lmx6", "lmx7",
"as1", "as2", "as3", "as4", "as5", "as6", "as7")]
df <- df %>%
mutate(mean_lc = (lc1 + lc2 + lc3 + lc4 + lc5 + lc6 + lc7 + lc8) / 8,
mean_lmx = (lmx1 + lmx2 + lmx3 + lmx4 + lmx5 + lmx6 + lmx7) / 7,
mean_as = (as1 + as2 + as3 + as4 + as5 + as6 + as7) / 7)
sum(is.na(df$mean_lmx))
sum(is.na(df$mean_as))
sum(is.na(df$mean_lc))
df <- df %>%
filter(mean_lc != "NA") %>%
filter(mean_lmx != "NA") %>%
filter(mean_as != "NA")
df <- df %>%
mutate(gender_match = case_when((gender == 3 & gender_l == 1) |
(gender == 4 & gender_l == 2) ~ 1, TRUE ~ 0))
df <- df[ , c("tmkey", "tlkey", "gender", "age", "gender_l", "age_l",
"lc1", "lc2", "lc3", "lc4", "lc5", "lc6", "lc7", "lc8",
"lmx1", "lmx2", "lmx3", "lmx4", "lmx5", "lmx6", "lmx7",
"as1", "as2", "as3", "as4", "as5", "as6", "as7")]
df <- df %>%
mutate(mean_lc = (lc1 + lc2 + lc3 + lc4 + lc5 + lc6 + lc7 + lc8) / 8,
mean_lmx = (lmx1 + lmx2 + lmx3 + lmx4 + lmx5 + lmx6 + lmx7) / 7,
mean_as = (as1 + as2 + as3 + as4 + as5 + as6 + as7) / 7)
sum(is.na(df$mean_lmx))
sum(is.na(df$mean_as))
sum(is.na(df$mean_lc))
df <- df %>%
filter(mean_lc != "NA") %>%
filter(mean_lmx != "NA") %>%
filter(mean_as != "NA")
df <- df %>%
mutate(gender_match = case_when((gender == 3 & gender_l == 1) |
(gender == 4 & gender_l == 2) ~ 1, TRUE ~ 0))
model_1 <- lm(mean_as ~ mean_lc, data = df)
summary(model_1)
model_2 <- lm(mean_as ~ mean_lc + mean_lmx, data = df)
summary(model_2)
model_3 <- lm(mean_as ~ mean_lc + mean_lmx * gender_match, data = df)
summary(model_3)
df <- df %>%
mutate(gen_mat4 = case_when(
gender == 3 & gender_l == 1 ~ "MM",
gender == 4 & gender_l == 2 ~ "FF",
gender == 3 & gender_l == 2 ~ "MF",
gender == 4 & gender_l == 1 ~ "FM"
))
df$gender_match <- as.numeric(df$gender_match)
df$gen_mat4 <- factor(df$gen_mat4, ordered = TRUE, levels = c("MM", "FF", "MF", "FM"))
MGmodel1 <- '
# Direct effects
mean_lmx ~ a*mean_lc
mean_as ~ mean_lc + b*mean_lmx
# indirect effects
indirect := a*b
'
fitMG1 <- sem(MGmodel1, data = df, group = "gen_mat4")
summary(fitMG1,  standardized = TRUE, rsq = TRUE)
summary(fitMg1, fit.measures = TRUE)
summary(fitMG1, fit.measures = TRUE)
source("~/.active-rstudio-document", echo=TRUE)
install.packages("psych")
install.packages("ggplot2")
install.packages("lavaan")
install.packages("tidyverse")
install.packages("lavaan")
install.packages("ggplot2")
install.packages("semTools")
library(semTools)
semTools::parameterEstimatesByGroup(fitMG1)
parameterEstimatesByGroup(fitMG1)
semTools::semPaths(fitMG1)
semPlot(fitMG1)
install.packages("semPlot")
library(semPlot)
semPlot(fitMG1)
install.packages("semptools")
library(semptools)
install.packages("semPlot")
install.packages("semPlot")
library(semPlot)
semPaths(fitMG1)
p_pa <- semPaths(fitMG1)
install.packages("semptools")
install.packages("semPlot")
library(semptools)
library(semPlot)
p_pa <- semPaths(fitMG1, whatLabels = "est",
sizeMan = 10,
edge.label.cex = 1.15,
style = "ram",
nCharNodes = 0, nCharEdges = 0,
layout = m)
install.packages("semPlot")
install.packages("semptools")
p_pa <- semPaths(fitMG1, whatLabels = "est",
sizeMan = 10,
edge.label.cex = 1.15,
style = "ram",
nCharNodes = 0, nCharEdges = 0,
layout = m)
p_pa <- semPaths(fitMG1, whatLabels = "est",
sizeMan = 10,
edge.label.cex = 1.15,
style = "ram",
nCharNodes = 0, nCharEdges = 0)
